import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';

import connectMongo from '../utils/connectMongo';
import Test from '../models/testModel';

export const getServerSideProps = async () => {
  try {
    console.log('CONNECTING TO MONGO');
    await connectMongo();
    console.log('CONNECTED TO MONGO');

    console.log('FETCHING DOCUMENTS');
    const tests = await Test.find();
    console.log('FETCHED DOCUMENTS');

    return {
      props: {
        tests: JSON.parse(JSON.stringify(tests)),
      },
    };
  } catch (error) {
    console.log(error);
    return {
      notFound: true,
    };
  }
};

export default function Home({tests}) {
  const createTest = async () => {
    const randomNum = Math.floor(Math.random() * 1000);
    const res = await fetch('/api/test/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      // body: JSON.stringify({
      //   name: `Name ${randomNum}`,
      //   flyg: `Flyg ${randomNum}`,
      //   departure: `Departure ${randomNum}`,
      //   destination: `Destination ${randomNum}`,
      //   avgångstid: `Avgångstid ${randomNum}`,
      //   hemresa: `Hemresa ${randomNum}`,
      //   antalPlatser: `Antal platser ${randomNum}`,
      //   bokade: `Bokade ${randomNum}`,
      //   avbokningsDatum: `Avbokningsdatum ${randomNum}`,
      //   price: `Price ${randomNum}`,
      //   url: `URL ${randomNum}`,
      //   email: `Email ${randomNum}`, // Add a valid email value
      // }),
      body: JSON.stringify({
        name: " ", // Update with appropriate value
        flyg: "Flyg", // Update with appropriate value
        departure:  `departure${randomNum}@departure.se`,
        destination: "Destination", // Update with appropriate value
        avgångstid: "Avgångstid", // Update with appropriate value
        hemresa: "Hemresa", // Update with appropriate value
        antalPlatser: "Antal platser", // Update with appropriate value
        bokade: "Bokade", // Update with appropriate value
        avbokningsDatum: "Avbokningsdatum", // Update with appropriate value
        price: "Price", // Update with appropriate value
        url: "URL", // Update with appropriate value
        email: "Email", // Update with appropriate value
      }),
    });
    const data = await res.json();
    console.log(data);
  };
  return (
    <>
      <div className={styles.grid}>
      {tests&&tests.map((test) => (
        <a
          href="https://nextjs.org/docs"
          key={test._id}
          className={styles.card}
        >
          <h2>{test.name} &rarr;</h2>
          <p>{test.flyg}</p>
          <h2>{test.departure} &rarr;</h2>
          <p>{test.destination}</p>
          <h2>{test.avgångstid} &rarr;</h2>
          <h2>{test.hemresa} &rarr;</h2>
          <h2>{test.antalPlatser} &rarr;</h2>
          <h2>{test.bokade} &rarr;</h2>
          <p>{test.avbokningsDatum}</p>
          <p>{test.price}</p>
          {/* <p>{test.url}</p> */}
        </a>
      ))}
    </div>
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <button onClick={createTest}>Create Test</button>
        <h1 className={styles.title}>
          Welcome to <a href='https://nextjs.org'>Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}></div>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
    </>
  );
}